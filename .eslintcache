[{"/home/runner/itssstdreacttodok63/src/index.js":"1","/home/runner/itssstdreacttodok63/src/App.js":"2","/home/runner/itssstdreacttodok63/src/reportWebVitals.js":"3","/home/runner/itssstdreacttodok63/src/components/Todo.js":"4","/home/runner/itssstdreacttodok63/src/components/Input.js":"5","/home/runner/itssstdreacttodok63/src/components/Filter.js":"6","/home/runner/itssstdreacttodok63/src/components/TodoItem.js":"7","/home/runner/itssstdreacttodok63/src/hooks/storage.js":"8","/home/runner/itssstdreacttodok63/src/lib/util.js":"9"},{"size":500,"mtime":1653979375812,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1653979375812,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1653979375812,"results":"13","hashOfConfig":"11"},{"size":1974,"mtime":1654072074038,"results":"14","hashOfConfig":"11"},{"size":701,"mtime":1653979889792,"results":"15","hashOfConfig":"11"},{"size":348,"mtime":1653979375812,"results":"16","hashOfConfig":"11"},{"size":613,"mtime":1653979738600,"results":"17","hashOfConfig":"11"},{"size":655,"mtime":1653979375812,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1653979375812,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8zyfg9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/runner/itssstdreacttodok63/src/index.js",[],["43","44"],"/home/runner/itssstdreacttodok63/src/App.js",[],"/home/runner/itssstdreacttodok63/src/reportWebVitals.js",[],"/home/runner/itssstdreacttodok63/src/components/Todo.js",["45","46","47","48","49","50"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems] = React.useState([\n      /* テストコード 開始 */\n    { key: getKey(), text: '日本語の宿題', done: false },\n    { key: getKey(), text: 'reactを勉強する', done: false },\n    { key: getKey(), text: '明日の準備をする', done: false },\n    /* テストコード 終了 */\n  ]);\n  const [tab,setTab] = React.useState([true, false, false]);\n  const setItems = (key, done) => {\n    const newitems = [...items]\n    for(let item of newitems){\n      if(item.key === key)\n        item.done = done\n    }\n    putItems(newitems)\n  }\n  const pushItem = (item) => {\n    const newitems = [...items,item]\n    putItems(newitems)\n  }\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      <Input addTodo={pushItem}></Input>\n      <div className=\"tabs is-centered\">\n        <ul>\n          <li className={tab[0] ? \"is-active\" : \"\"} onClick={setTab([true,false,false])}><a>すべて</a></li>\n          <li className={tab[1] ? \"is-active\" : \"\"} onClick={setTab([false,true,false])}><a>未完了</a></li>\n          <li className={tab[2] ? \"is-active\" : \"\"} onClick={setTab([false,false,true])}><a>完了済み</a></li>\n        </ul>\n      </div>\n      {items.map(item => \n        <TodoItem key={item.key} item={item} change = {setItems}/>\n      )}\n      <div className=\"panel-block\">\n        {items.length} items\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","/home/runner/itssstdreacttodok63/src/components/Input.js",["51"],"import React, { useState } from 'react';\nimport {getKey} from \"../lib/util\";\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( {addTodo} ) {\n  const addNew = (text) => {\n    let newItem = {key: getKey(), text : text, done : false }\n    addTodo(newItem)\n  }\n  return (\n    <div className=\"panel-block\">\n      <input onKeyPress={e=>{\n      if(e.key === 'Enter')\n        addNew(e.target.value)}} className=\"input is-info\" type=\"text\" placeholder=\"New Todo Item\"/>\n    </div>\n  );\n}\n\nexport default Input;\n","/home/runner/itssstdreacttodok63/src/components/Filter.js",[],"/home/runner/itssstdreacttodok63/src/components/TodoItem.js",[],"/home/runner/itssstdreacttodok63/src/hooks/storage.js",["52","53"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    \n  }, []);\n\n  const putItems = items => {\n    \n  };\n\n  const clearItems = () => {\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;",["54","55"],"/home/runner/itssstdreacttodok63/src/lib/util.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":13,"column":8,"nodeType":"62","messageId":"63","endLine":13,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":16,"column":8,"nodeType":"62","messageId":"63","endLine":16,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":50,"column":90,"nodeType":"68","endLine":50,"endColumn":93},{"ruleId":"66","severity":1,"message":"67","line":51,"column":90,"nodeType":"68","endLine":51,"endColumn":93},{"ruleId":"66","severity":1,"message":"67","line":52,"column":90,"nodeType":"68","endLine":52,"endColumn":93},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"69","line":12,"column":7,"nodeType":"62","messageId":"63","endLine":12,"endColumn":18},{"ruleId":"60","severity":1,"message":"70","line":15,"column":17,"nodeType":"62","messageId":"63","endLine":15,"endColumn":25},{"ruleId":"56","replacedBy":"71"},{"ruleId":"58","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Filter' is defined but never used.","'useStorage' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.",["73"],["74"],"no-global-assign","no-unsafe-negation"]